spring:
  datasource:
    url: jdbc:mysql://${DB_HOST:mysql}:${DB_PORT:3306}/${DB_NAME:cdb_mosh_p1_ecommerce_app_prod}?useSSL=true&allowPublicKeyRetrieval=true&serverTimezone=UTC&createDatabaseIfNotExist=true
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:19980223}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      auto-commit: true
      connection-test-query: SELECT 1

  # JPA Configuration for production
  jpa:
    hibernate:
      ddl-auto: none  # DISABLED - Flyway controls schema
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.MySQLDialect
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
    open-in-view: false

  # Flyway Configuration for Docker
  flyway:
    enabled: true
    baseline-on-migrate: true
    validate-on-migrate: true
    locations: classpath:db/migration
    sql-migration-prefix: V
    sql-migration-suffixes: .sql

# Server configuration for Docker
server:
  port: 8080
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  tomcat:
    max-threads: 200
    min-spare-threads: 10
    max-connections: 8192
    accept-count: 100
    connection-timeout: 20000

# Logging configuration for Docker
logging:
  level:
    com.codewithmosh.store: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /app/logs/application.log
    max-size: 100MB
    max-history: 30

# Production Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: ${SWAGGER_ENABLED:false}  # Disabled by default in production
  show-actuator: false

# Production Payment Configuration
payment:
  default-method: ${PAYMENT_DEFAULT_METHOD:paypal}

# Production Stripe Configuration
stripe:
  enabled: ${STRIPE_ENABLED:true}
  api-url: https://api.stripe.com
  timeout: 5000
  public-key: ${STRIPE_PUBLIC_KEY:pk_live_your_key}
  secret-key: ${STRIPE_SECRET_KEY:sk_live_your_key}
  webhook-secret: ${STRIPE_WEBHOOK_SECRET:whsec_your_secret}
  supported-currencies:
    - USD
    - EUR
    - GBP
    - CAD

# Production PayPal Configuration
paypal:
  enabled: ${PAYPAL_ENABLED:true}
  api-url: https://api.paypal.com
  environment: ${PAYPAL_ENVIRONMENT:live}
  timeout: 5000
  client-id: ${PAYPAL_CLIENT_ID:your_client_id}
  client-secret: ${PAYPAL_CLIENT_SECRET:your_client_secret}
  supported-currencies:
    - USD
    - EUR
    - GBP
    - CAD
    - AUD
  fee-percentage: 2.9
  fixed-fee: 0.30

# Production Credit Card Configuration
credit-card:
  enabled: ${CREDIT_CARD_ENABLED:true}
  processor-name: "Production Payment Processor"
  timeout: 3000
  cvv-required: true
  billing-address-required: true
  max-retry-attempts: 3
  accepted-card-types:
    - VISA
    - MASTERCARD
    - AMERICAN_EXPRESS
    - DISCOVER
  processing-fee-percentage: 2.5

# Management endpoints for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
  health:
    diskspace:
      enabled: true
    db:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true 